# 以下所有执行均在ansible控制节点自己执行完毕
- name: 创建文件及目录
# bin_dir="/opt/kubernetes/bin"
#  ca_dir="/opt/kubernetes/ssl"
#  base_dir="/opt"
# cfg_dir ="/opt/kubernetes/cfg"
  file: name={{ item }} state=directory
  with_items:
  - "{{ bin_dir }}"
  - "{{ ca_dir }}"
  - "{{ base_dir }}"
  - "{{ cfg_dir }}"

- name: 下载证书工具 CFSSL和 kubectl
  copy: src={{ base_dir }}/files/{{ item }} dest={{ bin_dir }}/{{ item }} mode=0755
  with_items:
  - cfssl
  - cfssl-certinfo
  - cfssljson

# 注册变量p，根据p的stat信息判断是否已经生成过ca证书，如果没有，下一步生成证书
# 如果已经有ca证书，为了保证整个安装的幂等性，跳过证书生成的步骤
- name: 读取ca证书stat信息
  stat: path="{{ ca_dir }}/ca.pem"
  register: p

- name: 准备CA配置文件
  template: src=ca-config.json.j2 dest={{ ca_dir }}/ca-config.json
  when: p.stat.isreg is not defined

- name: 准备CA签名请求
  template: src=ca-csr.json.j2 dest={{ ca_dir }}/ca-csr.json
  when: p.stat.isreg is not defined

- name: 生成 CA 证书和私钥
  when: p.stat.isreg is not defined
  shell: "cd {{ ca_dir }} && {{ bin_dir }}/cfssl gencert -initca ca-csr.json | {{ bin_dir }}/cfssljson -bare ca" 

#----------- 创建kubectl kubeconfig文件: /root/.kube/config
- name: 准备kubectl使用的admin 证书签名请求
  template: src=admin-csr.json.j2 dest={{ ca_dir }}/admin-csr.json

- name: 创建 admin证书与私钥
  shell: "cd {{ ca_dir }} && {{ bin_dir }}/cfssl gencert \
        -ca={{ ca_dir }}/ca.pem \
        -ca-key={{ ca_dir }}/ca-key.pem \
        -config={{ ca_dir }}/ca-config.json \
        -profile=kubernetes admin-csr.json | {{ bin_dir }}/cfssljson -bare admin"

